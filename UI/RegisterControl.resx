<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S+yyy/8D5e5wrXfNgygAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>